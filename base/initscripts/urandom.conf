description "urandom seed generation"

start on local-filesystems
stop on unmounting-filesystem

## Assumption 1:  We assume $SAVEDFILE is a file (or a symlink
## to a file) that resides on a non-volatile medium that persists
## across reboots.
## Case 1a: Ideally, it is readable and writeable.  Its is unshared,
## i.e. its contents are unique to this machine.  It is protected so
## that its contents are not known to attackers.
## Case 1b: Less than ideally, it is read-only.  Its contents are
## unique to this machine and not known to attackers.
env SAVEDFILE=/var/lib/urandom/random-seed

pre-start script
	if [ ! -f "$SAVEDFILE" ]; then
		mkdir -p "$(dirname $SAVEDFILE)"
		touch "$SAVEDFILE"
	fi

	if ! POOLBYTES=$((
	  ($(cat /proc/sys/kernel/random/poolsize 2>/dev/null) + 7) / 8
	)) ; then
	  POOLBYTES=512
	fi

	# Seed the RNG with date and time.
	# This is helpful in the less-than-ideal case where $SAVEDFILE
	# is read-only.
	# The value of this is greatly reduced if $SAVEDFILE is missing,
	# or its contents are shared machine-to-machine or known to
	# attackers (since they might well know at what time this
	# machine booted up).
	(
	  date +%s.%N

	  # Load and then save $POOLBYTES bytes,
	  # which is the size of the entropy pool
	  if [ -f "$SAVEDFILE" ]
	  then
		  cat "$SAVEDFILE"
	  fi
	# Redirect output of subshell (not individual commands)
	# to cope with a misfeature in the FreeBSD (not Linux)
	# /dev/random, where every superuser write/close causes
	# an explicit reseed of the yarrow.
	) >/dev/urandom

	# Write a new seed into $SAVEDFILE because re-using a seed
	# compromises security.  Each time we re-seed, we want the
	# seed to be as different as possible.
	# Write it now, in case the machine crashes without doing
	# an orderly shutdown.
	# The write will fail if $SAVEDFILE is read-only, but it
	# doesn't hurt to try.
	umask 077
	dd if=/dev/urandom of=$SAVEDFILE bs=$POOLBYTES count=1 >/dev/null 2>&1
end script

post-stop script
	# Carry a random seed from shut-down to start-up;
	# Write it on shutdown, in case the one written at startup
	# has been lost, snooped, or otherwise compromised.
	# see documentation in linux/drivers/char/random.c

        if ! POOLBYTES=$((
          ($(cat /proc/sys/kernel/random/poolsize 2>/dev/null) + 7) / 8
        )) ; then
          POOLBYTES=512
        fi

	umask 077
        dd if=/dev/urandom of=$SAVEDFILE bs=$POOLBYTES count=1 >/dev/null 2>&1
end script
