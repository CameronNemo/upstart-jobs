# aiccu - SixXS Automatic IPv6 Connectivity Client Utility

description "SixXS Automatic IPv6 Connectivity Client Utility"
author "Caleb Callaway <enlightened.despot@gmail.com>"

start on (local-filesystems and net-device-up IFACE!=lo)
stop on runlevel [!2345]

emits net-device-up
emits net-device-down

env BIN=/usr/sbin/aiccu
env DESC="SixXS Automatic IPv6 Connectivity Client Utility"
env CFG=/etc/aiccu.conf
env LOGFILE="/var/log/aiccu.log"

pre-start script
    log () {
       echo `date +"%Y%d%m %T "`$1 >> $LOGFILE
    }
    # read defaults
    [ -f /etc/default/aiccu ] && . /etc/default/aiccu

    case "$AICCU_ENABLED" in
      [Nn]*)
        exit 0
        ;;
    esac

    [ -x "$BIN" ] || exit 0 

    # Verify we can write the log file
    if [ ! -f $LOGFILE ]; then
        touch $LOGFILE
        if [ "$?" -ne 0 ]; then 
            echo "Failed to create log file" 
            exit 1
        fi
    elif [ ! -w $LOGFILE ]; then
        echo "Log file unwritable" 
        exit 1
    fi

    # Verify that the configuration file exists
    if [ ! -f $CFG ]; then
        log "AICCU Configuration file /etc/aiccu.conf doesn't exist"
        exit 1
    fi

    # Verify that the configuration is correct
    if [ `grep -c "^username" /etc/aiccu.conf 2>/dev/null` -ne 1 ]; then
        log "AICCU is not configured, edit /etc/aiccu.conf first"
        exit 1
    fi

    # Verify that it is in daemonize mode, otherwise it won't ever return
    if [ `grep -c "^daemonize.*true" /etc/aiccu.conf 2>/dev/null` -ne 1 ]; then
        log "AICCU is not configured to daemonize on run"
        exit 1
    fi

    # start
    log "Starting $DESC"

    # Workaround race with local DNS services
    server=$(grep "^server" /etc/aiccu.conf | awk '{ print $2 }')
    if [ -z "$server" ]; then
        log "No server configuration specified - defaulting to tic.sixxs.net"
        server="tic.sixxs.net"
    fi
    log "Checking access to $server: "
    count=0
    while ! ping -c1 $server 2>&1 >/dev/null; do
        # Try for 10 seconds and then giveup
        if [ $count -le 10 ]; then
            log "."
            count=$(($count + 1))
            sleep 1
        else
            log "FAIL"
            exit 1
        fi
    done
    log "OK"
    log "Command line: $BIN start $DAEMON_ARGS"

    $BIN start $DAEMON_ARGS >> $LOGFILE 2>&1
end script

post-start script
    log () {
       echo `date +"%Y%d%m %T "`$1 >> $LOGFILE
    }
    log "$DESC started"
    initctl emit -n net-device-up IFACE=sixxs
end script

post-stop script
    log () {
       echo `date +"%Y%d%m %T "`$1 >> $LOGFILE
    }
    log "Stopping $DESC"
    $BIN stop >> $LOGFILE 2>&1
    log "$DESC stopped"
    initctl emit -n net-device-down IFACE=sixxs
end script
