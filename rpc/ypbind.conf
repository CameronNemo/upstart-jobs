description	"NIS binding process"
author		"Steve Langasek <steve.langasek@canonical.com>"

# Patterned after the statd.conf job in nfs-common.
start on (started portmap ON_BOOT=
          or (started portmap ON_BOOT=y
              and ((filesystem and static-network-up) or failsafe-boot)))
stop on stopping portmap or runlevel [!2345]

expect daemon
respawn
respawn limit 3 250

pre-start script
	NISSERVER=false

	[ -f /usr/sbin/ypbind ] && [ -f /etc/defaultdomain ] || { stop; exit 0; }

	[ -f /etc/default/nis ] && . /etc/default/nis

	oname=$(domainname)
	nname=$(cat /etc/defaultdomain)
	if [ "$oname" != "$nname" ]; then
		echo "Setting NIS domainname to: $nname"
		domainname "$nname"
	fi

	case $NISSERVER in
		master|slave|[Yy]*)
			;;
		*)
			case $NISCLIENT in
				false|[nN]*)
					{ stop; exit 0; }
					;;
			esac			
			;;
	esac

	if [ "$NISSERVER" != false ]; then
		start wait-for-state WAIT_FOR=ypserv WAITER=ypbind WAIT_STATE=running >/dev/null
	fi
end script

script
	[ -f /etc/default/nis ] && . /etc/default/nis

	BROADCAST=-broadcast
	while read arg junk ; do
		case $arg in
			ypserver|domain)
				BROADCAST=
				;;
		esac
	done < /etc/yp.conf

	exec ypbind $BROADCAST $YPBINDARGS
end script

post-start script
	# Give ypbind time to finish starting up, so that jobs depending on
	# it are actually able to use the maps
	echo -n "Binding to YP server "
	bound=
	for i in 1 2 3 4 5
	do
		echo -n "."
		if status ypbind | grep -q start/respawn; then
			# something killed ypbind; short-circuit here instead
			# of continuing to try to call ypwhich, since that
			# can take more than a minute.
			break
		fi
		if [ "$(ypwhich 2>/dev/null)" != "" ]; then
			bound=1
			break
		fi
		sleep 1
	done
	if [ "$bound" ]; then
		echo "done"
	else
		echo "backgrounded"
	fi
end script
